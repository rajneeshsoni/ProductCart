2020-12-07 23:26:44,323 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-12-07 23:26:47,607 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-12-07 23:26:49,957 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-12-07 23:26:49,959 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/ProductCart/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-12-07 23:26:49,963 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-07 23:26:53,169 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-07 23:26:53,376 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 185ms. Found 3 JPA repository interfaces.
2020-12-07 23:26:54,092 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=f24d3d6c-612c-396a-9887-75b16833eee0
2020-12-07 23:26:55,895 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8087 (http)
2020-12-07 23:26:55,921 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8087"]
2020-12-07 23:26:55,923 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-07 23:26:55,924 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-12-07 23:26:57,753 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-07 23:26:57,754 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 7759 ms
2020-12-07 23:26:58,296 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 23:26:58,398 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2020-12-07 23:26:59,985 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2020-12-07 23:27:00,131 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-07 23:27:00,289 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 23:27:00,424 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.15.Final
2020-12-07 23:27:01,016 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-12-07 23:27:01,173 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@69f958e1, org.springframework.security.web.context.SecurityContextPersistenceFilter@65fce774, org.springframework.security.web.header.HeaderWriterFilter@459ffa07, org.springframework.security.web.authentication.logout.LogoutFilter@6ba51e7e, com.productcart.api.filter.JwtRequestFilter@375dcea8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33fe453e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f4e16fa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1db4c960, org.springframework.security.web.session.SessionManagementFilter@1b966302, org.springframework.security.web.access.ExceptionTranslationFilter@3ac2fc0e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3b3bc0f3]
2020-12-07 23:27:01,285 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-12-07 23:27:01,286 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-12-07 23:27:01,331 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-12-07 23:27:01,333 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-12-07 23:27:01,753 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-12-07 23:27:03,237 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-07 23:27:03,256 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 23:27:04,690 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-07 23:27:06,991 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2020-12-07 23:27:09,350 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2020-12-07 23:27:11,678 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2020-12-07 23:27:11,721 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-12-07 23:27:12,037 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-12-07 23:27:12,126 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-12-07 23:27:12,360 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-12-07 23:27:12,361 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-12-07 23:27:12,642 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-12-07 23:27:12,642 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-12-07 23:27:13,121 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-12-07 23:27:13,910 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-12-07 23:27:13,911 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-12-07 23:27:13,912 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-12-07 23:27:13,913 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-12-07 23:27:13,914 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-12-07 23:27:13,915 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-12-07 23:27:13,916 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-12-07 23:27:14,510 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-12-07 23:27:14,515 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-12-07 23:27:14,522 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-12-07 23:27:14,535 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1607363834530 with initial instances count: 0
2020-12-07 23:27:14,543 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application PRODUCTCART with eureka with status UP
2020-12-07 23:27:14,544 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1607363834544, current=UP, previous=STARTING]
2020-12-07 23:27:14,551 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_PRODUCTCART/localhost:ProductCart:8087: registering service...
2020-12-07 23:27:14,562 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8087"]
2020-12-07 23:27:14,657 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8087 (http) with context path ''
2020-12-07 23:27:14,660 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8087
2020-12-07 23:27:14,964 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_PRODUCTCART/localhost:ProductCart:8087 - registration status: 204
2020-12-07 23:27:17,429 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2020-12-07 23:27:17,438 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositories…
2020-12-07 23:27:17,877 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2020-12-07 23:27:17,895 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ProductCartApplication in 37.055 seconds (JVM running for 43.161)
2020-12-07 23:27:44,524 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Disable delta property : false
2020-12-07 23:27:44,527 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Single vip registry refresh property : null
2020-12-07 23:27:44,542 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Force full registry fetch : false
2020-12-07 23:27:44,553 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Application is null : false
2020-12-07 23:27:44,557 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Registered Applications size is zero : true
2020-12-07 23:27:44,559 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Application version is -1: false
2020-12-07 23:27:44,562 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Getting all instance registry info from the eureka server
2020-12-07 23:27:44,650 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] The response status is 200
2020-12-07 23:32:13,931 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-07 23:37:13,944 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-07 23:42:13,950 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-07 23:47:13,955 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-07 23:52:13,971 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-07 23:53:24,265 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8087-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 23:53:24,273 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8087-exec-2] Initializing Servlet 'dispatcherServlet'
2020-12-07 23:53:24,363 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8087-exec-2] Completed initialization in 87 ms
2020-12-07 23:53:24,743 INFO com.productcart.api.controller.ProductCartController [http-nio-8087-exec-2] placeOrder
2020-12-07 23:54:14,259 INFO org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [RMI TCP Connection(42)-127.0.0.1] Application shutdown requested.
2020-12-07 23:54:14,262 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [RMI TCP Connection(42)-127.0.0.1] Unregistering application PRODUCTCART with eureka with status DOWN
2020-12-07 23:54:14,263 WARN com.netflix.discovery.DiscoveryClient$3 [RMI TCP Connection(42)-127.0.0.1] Saw local status change event StatusChangeEvent [timestamp=1607365454263, current=DOWN, previous=UP]
2020-12-07 23:54:14,264 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_PRODUCTCART/localhost:ProductCart:8087: registering service...
2020-12-07 23:54:14,277 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(42)-127.0.0.1] Pausing ProtocolHandler ["http-nio-8087"]
2020-12-07 23:54:14,289 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_PRODUCTCART/localhost:ProductCart:8087 - registration status: 204
2020-12-07 23:54:15,733 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(42)-127.0.0.1] Stopping service [Tomcat]
2020-12-07 23:54:15,750 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(42)-127.0.0.1] Waiting for [1] instance(s) to be deallocated for Servlet [dispatcherServlet]
2020-12-07 23:54:16,861 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(42)-127.0.0.1] Waiting for [1] instance(s) to be deallocated for Servlet [dispatcherServlet]
2020-12-07 23:54:17,958 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(42)-127.0.0.1] Waiting for [1] instance(s) to be deallocated for Servlet [dispatcherServlet]
2020-12-07 23:54:18,076 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(42)-127.0.0.1] Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-12-07 23:54:18,123 WARN org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(42)-127.0.0.1] The web application [ROOT] is still processing a request that has yet to finish. This is very likely to create a memory leak. You can control the time allowed for requests to finish by using the unloadDelay attribute of the standard Context implementation. Stack trace of request processing thread:[
 com.productcart.api.controller.ProductCartController.placeOrder(ProductCartController.java:97)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
 java.lang.reflect.Method.invoke(Unknown Source)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
 org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
 org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
 org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
 org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
 org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
 org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
 org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
 com.productcart.api.filter.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:58)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
 org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
 org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
 org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
 org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
 org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
 org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
 org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
 org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
 org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Unknown Source)]
2020-12-07 23:54:18,127 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(42)-127.0.0.1] Stopping ProtocolHandler ["http-nio-8087"]
2020-12-07 23:54:23,146 WARN org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(42)-127.0.0.1] The executor associated with thread pool [http-nio-8087] has not fully shutdown. Some application threads may still be running.
2020-12-07 23:54:23,178 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(42)-127.0.0.1] Destroying ProtocolHandler ["http-nio-8087"]
2020-12-07 23:54:23,236 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [RMI TCP Connection(42)-127.0.0.1] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 23:54:23,254 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [RMI TCP Connection(42)-127.0.0.1] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-07 23:54:23,261 INFO com.netflix.discovery.DiscoveryClient [RMI TCP Connection(42)-127.0.0.1] Shutting down DiscoveryClient ...
2020-12-07 23:54:26,276 INFO com.netflix.discovery.DiscoveryClient [RMI TCP Connection(42)-127.0.0.1] Unregistering ...
2020-12-07 23:54:26,307 INFO com.netflix.discovery.DiscoveryClient [RMI TCP Connection(42)-127.0.0.1] DiscoveryClient_PRODUCTCART/localhost:ProductCart:8087 - deregister  status: 200
2020-12-07 23:54:26,334 INFO com.netflix.discovery.DiscoveryClient [RMI TCP Connection(42)-127.0.0.1] Completed shut down of DiscoveryClient
2020-12-07 23:54:26,337 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(42)-127.0.0.1] HikariPool-1 - Shutdown initiated...
2020-12-07 23:54:26,384 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(42)-127.0.0.1] HikariPool-1 - Shutdown completed.
2020-12-07 23:59:25,250 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-12-07 23:59:29,297 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-12-07 23:59:31,541 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-12-07 23:59:31,543 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/ProductCart/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-12-07 23:59:31,548 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-07 23:59:35,445 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-07 23:59:35,707 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 239ms. Found 3 JPA repository interfaces.
2020-12-07 23:59:36,538 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=f24d3d6c-612c-396a-9887-75b16833eee0
2020-12-07 23:59:38,640 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8087 (http)
2020-12-07 23:59:38,656 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8087"]
2020-12-07 23:59:38,658 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-07 23:59:38,659 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-12-07 23:59:40,918 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-07 23:59:40,918 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 9322 ms
2020-12-07 23:59:41,347 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 23:59:41,494 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2020-12-07 23:59:43,143 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2020-12-07 23:59:43,281 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-07 23:59:43,439 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 23:59:43,505 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.15.Final
2020-12-07 23:59:44,021 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-12-07 23:59:44,190 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f967fb0, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b49dadf, org.springframework.security.web.header.HeaderWriterFilter@10fb64cd, org.springframework.security.web.authentication.logout.LogoutFilter@47cf0a37, com.productcart.api.filter.JwtRequestFilter@533bc1a5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c2b4004, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10de7d37, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a6077e1, org.springframework.security.web.session.SessionManagementFilter@56956fc5, org.springframework.security.web.access.ExceptionTranslationFilter@55260ab2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@68105768]
2020-12-07 23:59:44,246 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-12-07 23:59:44,246 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-12-07 23:59:44,256 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-12-07 23:59:44,258 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-12-07 23:59:44,334 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-12-07 23:59:46,265 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-07 23:59:46,285 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 23:59:48,464 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-07 23:59:50,829 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2020-12-07 23:59:53,481 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2020-12-07 23:59:56,397 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2020-12-07 23:59:56,510 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-12-07 23:59:57,026 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-12-07 23:59:57,155 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-12-07 23:59:57,404 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-12-07 23:59:57,405 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-12-07 23:59:57,791 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-12-07 23:59:57,792 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-12-07 23:59:58,396 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-12-07 23:59:59,396 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-12-07 23:59:59,397 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-12-07 23:59:59,398 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-12-07 23:59:59,399 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-12-07 23:59:59,399 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-12-07 23:59:59,400 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-12-07 23:59:59,400 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-12-07 23:59:59,638 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-12-07 23:59:59,643 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-12-07 23:59:59,654 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-12-07 23:59:59,666 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1607365799662 with initial instances count: 0
2020-12-07 23:59:59,672 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application PRODUCTCART with eureka with status UP
2020-12-07 23:59:59,674 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1607365799674, current=UP, previous=STARTING]
2020-12-07 23:59:59,678 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_PRODUCTCART/localhost:ProductCart:8087: registering service...
2020-12-07 23:59:59,682 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8087"]
2020-12-07 23:59:59,785 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8087 (http) with context path ''
2020-12-07 23:59:59,788 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8087
2020-12-07 23:59:59,867 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_PRODUCTCART/localhost:ProductCart:8087 - registration status: 204
